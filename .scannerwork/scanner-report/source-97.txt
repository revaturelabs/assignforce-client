<!--Trainers without an email won't appear on the profile page they'll act almost like, dead links -->
<div id="profileDiv" class="container" *ngIf="!failed">
  <mat-card>
    <mat-toolbar-row>
      <mat-toolbar class="md-toolbar" layout="columns">
        <span>
          <button class="mat-button">
            <a routerLink="/trainers" style="color:inherit;">
              <i class="material-icons" style="display: inline-block; vertical-align: middle;">fast_rewind</i>Trainers</a>
          </button>
        </span>
        <span class="mat-expansion-panel-header-title">Profile</span>
        <span class="md-toolbar-spacer"></span>
        <button mat-icon-button (click)="updateTrainerInfo()" *ngIf="editable && verifyEmail()">
          <mat-icon matTooltip="Save " class="material-icons " *ngIf="!lockProfile ">save</mat-icon>
          <mat-icon matTooltip="Edit " class="material-icons " *ngIf="lockProfile ">edit</mat-icon>
        </button>
      </mat-toolbar>
    </mat-toolbar-row>
    <!--info section-->
    <mat-card-content id="profileContent ">
      <div class="row " *ngIf="trainer">
        <div class="col-lg-2 ">
          <img style="border-radius: 50%; " alt=" " ng-src="https://app.revature.com/core/resources/download/default/interns/image?t=1486138020884 "
            id="displayImage " class="width-200 height-200 " src="https://app.revature.com/core/resources/download/default/interns/image?t=1486138020884 ">
        </div>
        <div class="col-lg-6 text-center mt-lg-4" id="profileName">
          <div class="row">
            <h1 style="display: inline">{{this.trainer.firstName}} {{this.trainer.lastName}}</h1>
            <h4>Email: {{this.trainer.email}}</h4>
            <!--The link for this will change unless there's no linkedIn link assign in that case it'll be just a link to linkedIn-->
          </div>
          <div *ngIf="!lockProfile ">
            <form [formGroup]="nameForm">
              <mat-form-field flex>
                <input matInput class="formControl" placeholder="First Name" formControlName="firstName" [(ngModel)]="trainer.firstName"
                  required>
              </mat-form-field>
              <mat-form-field flex>
                <input matInput class="formControl" placeholder="Last Name" name="lastLast " formControlName="lastName" [(ngModel)]="trainer.lastName"
                  required>
              </mat-form-field>
              <mat-form-field flex>
                <mat-select formControlName="locSelect" placeholder="Preferred location" [disabled]="lockProfile" [(ngModel)]="trainer.preferredLocation">
                  <mat-option *ngFor="let address of addresses" [value]="address.id">
                    {{ address.name }}
                  </mat-option>
                </mat-select>
              </mat-form-field>
            </form>
          </div>
        </div>
      </div>
      <div *ngIf="loading == true " class="center ">
        <div fxFlex="100 "> &nbsp;</div>
        <mat-progress-spinner class="center " mode="indeterminate "></mat-progress-spinner>
        <div fxFlex="100 "> &nbsp;</div>
      </div>
      <div *ngIf="trainer">
        <app-skills [trainer]="trainer" [editable]="editable && verifyEmail()" (skillsUpdated)="updateTrainer($event)"></app-skills>
      </div>
      <!--Later when we have an idea of what we want to do for the uploads we can work on fleshing this out
          there's no implementation at all right now not even in the .ts file-->
    </mat-card-content>
  </mat-card>
</div>
<!-- Unavailability form -->
<mat-card *ngIf="auth0.userHasRole(['Trainer']) && verifyEmail()">
  <mat-card-content>
    <mat-toolbar-row>
      <mat-toolbar class="md-toolbar" layout="columns">
        <span class="mat-expansion-panel-header-title">Unavailability Form</span>
        <span class="md-toolbar-spacer"></span>
      </mat-toolbar>
    </mat-toolbar-row>
    <div>
      <form (ngSubmit)="saveUnavailable()" #unavailabilityForm="ngForm">
        <label>Start Date:</label>
        <mat-form-field>
          <input matInput [matDatepicker]="startPicker" placeholder="Choose start date" [(ngModel)]="unavailability.startDate" name="startDate" required>
          <mat-datepicker-toggle matSuffix [for]="startPicker"></mat-datepicker-toggle>
          <mat-datepicker #startPicker></mat-datepicker>
        </mat-form-field>
        <br>
        <label>End Date:</label>
        <mat-form-field>
          <input matInput [matDatepicker]="endPicker" placeholder="Choose end date" [(ngModel)]="unavailability.endDate" name="endDate" required>
          <mat-datepicker-toggle matSuffix [for]="endPicker"></mat-datepicker-toggle>
          <mat-datepicker #endPicker></mat-datepicker>
        </mat-form-field>
        <br>
        <label>Description:</label>
        <mat-form-field>
          <input matInput placeholder="Description" [(ngModel)]="unavailability.description" name="description" required>
        </mat-form-field>
        <button mat-raised-button [disabled]="!unavailabilityForm.form.valid" color="primary" type="submit">Submit</button>
      </form>
    </div>
  </mat-card-content>
</mat-card>

<div *ngIf="failed">
  <h1>Error: Failed to load</h1>
</div>
